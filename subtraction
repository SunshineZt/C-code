

#include<stdio.h>

#include<stdlib.h>

typedef struct node

{

 

    int m,n;

    struct node *next;

}*linklist,S;

linklist create(int c)

{

    linklist l;

    S *p,*q;

    l=(linklist)malloc(sizeof(S));

    l->next=NULL;

    q=l;

    getchar();

    while(c--)

    {

        p=(linklist)malloc(sizeof(S));

        scanf("(%d,%d)",&p->m,&p->n);

        q->next=p;

        q=p;

    }   

    getchar();

    q->next=NULL;

    return l;

}

int print(linklist l)

{

    S *p,*q;

    char x;

    int flag=1; 

    int s=0;

    int i=0,j=0;

    p=q=l->next;

    while(q!=NULL)

    {

        if(q->m==0)

        i++;

        j++;

        q=q->next;  

    }

    if(i==j)

    {

        printf("0");

        return 0;

    }

    while(p!=NULL)

    {

        

        if(p->m!=1&&p->m!=-1&&p->m!=0&&p->m>0)

        {

        

        

            if(p->n==1)

            {

                if(flag!=1)

                printf("+");

                printf("%dX",p->m); 

                flag++;

            }

        

             if(p->n==0)

            {

                   if(flag!=1)

                   printf("+");

                   printf("%d",p->m);

                   flag++;

            }

        

            if(p->n!=1&&p->n!=0)

            {

                if(flag!=1)

                printf("+");

                printf("%dX^%d",p->m,p->n);

                flag++;

            }

                

        }

        if(p->m!=1&&p->m!=-1&&p->m!=0&&p->m<0)

        {

            if(p->n==1)

            {

                printf("%dX",p->m);

                flag++;

            }

            

             if(p->n==0)

            {

                   printf("%d",p->m);

                   flag++;

            }

        

            if(p->n!=0&&p->n!=1)

            {

                   printf("%dX^%d",p->m,p->n);

                   flag++;

                

            }

            

        }

            if(p->m==1)

            {

                if(flag!=1)

                putchar('+');

                if(p->n==0)

                {

                   printf("1");

                   flag++;

                }

                

                 if(p->n==1)

                {

                   

                   printf("X");

                   flag++;

                }

                

                if(p->n!=1&&p->n!=0)

                {

                   printf("X^%d",p->n);

                   flag++;

                   

                }

                       

            }

            if(p->m==-1)

            {

                if(p->n==0)

                {

                       printf("-1");

                   flag++;

                }

            

                if(p->n==1)

                {

                   printf("-X");

                   flag++;

                }

                

                if(p->n!=1&&p->n!=0)

                {

                   printf("-X^%d",p->n);

                   flag++;

                   

                }

            

            }

            if(p->m==0)

            {

                printf("");

            }

        

        

        

            p=p->next;

        

    } 

}

linklist add(linklist la,linklist lb)

{

    linklist lc,l;

    lc=(linklist)malloc(sizeof(S));

    lc->next=NULL;

    l=lc;

    S *p,*q,*r;

    p=la->next;

    q=lb->next;

    while(p!=NULL&&q!=NULL)

    {

        r=(linklist)malloc(sizeof(S));

        if(p->n==q->n)

        {

            r->m=p->m+q->m;

            r->n=p->n;

            l->next=r;

            l=r;

            p=p->next;

            q=q->next;  

            continue;

        }

        if(p->n<q->n)

        {

            r->n=p->n;

            r->m=p->m;

            l->next=r;

            l=r;

            p=p->next;

            continue;

        }

        if(q->n<p->n)

        {

            r->n=q->n;

            r->m=q->m;

            l->next=r;

            l=r;

            q=q->next;

            continue; 

        }

    }

    if(q!=NULL)

    {

        l->next=q;

        l=q;

        q=q->next;

    }

    if(p!=NULL)

    {

        l->next=p;

        l=p;

        p=p->next;

    }

    if(p==NULL&q==NULL)

    {

            l->next=NULL;

    }

 

    return lc;

}

linklist sub(linklist la,linklist lb)

{

 

    S *p,*q,*d;

    q=lb->next;

    while(q!=NULL)

    {

    

        q->m*=-1;

        q=q->next;

    }

    d=add(la,lb);

    return d;

    

}

 

int main()

{

    

    linklist la,lb,lc;

    int b,a;

    scanf("%d",&a);

    la=create(a);

    scanf("%d",&b);

    lb=create(b);

 

 

    lc=sub(la,lb);

    print(lc);

    return 0;

} 

